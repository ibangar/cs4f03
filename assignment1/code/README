a) This file describes the algorithm used in this project.

- Initially, each process allocates space to hold data for A, b and y.

- Process 0 fills its A matrix and b vector with random values

- Process 0 sends the entire b to each process.

- Process 0 sends an equal amount of rows from A to each process in an alternating
  fashion like so:

	for each row of A
		n = row number mod number of processes
		send row to process n

- Once all processes receive b and their parts of A, they compute the dot product of
  each row with b.

	for each row received
		compute A (dot) b

- Each process sends their result set back to process 0.

- All processes except process 0 exit.

- Process 0 receives the computed dot products for all rows of A with b and stores them in
  y.

- Process 0 calls getResult(m, n, A, b, y) where m and n is the number of rows and columns in
  A, b is the initial multipliation vector and y is the result of the matrix / vector multiplication.

